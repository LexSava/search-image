{"version":3,"sources":["components/LoadingScreen/LoadingScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingScreen","props","Container","className","LoadableComponent","Loadable","loader","loading","delay","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAsBeA,EAfiC,SAACC,GAAD,OAC9C,cAACC,EAAA,EAAD,UACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,yBCVjBC,G,MAAoBC,IAAS,CACjCC,OAAQ,kBAAM,qDACdC,QAASP,EACTQ,MAAO,OAYMC,EAPa,kBAC1B,cAAC,IAAD,CAAeC,SAAS,SAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,SCJxBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.455d6c18.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './LoadingScreen.scss';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\n\ninterface ILoadingScreen {}\n\nconst LoadingScreen: React.FC<ILoadingScreen> = (props) => (\n  <Container>\n    <div className=\"container\">\n      <div className=\"loader\">\n        <div className=\"loader--dot\" />\n        <div className=\"loader--dot\" />\n        <div className=\"loader--dot\" />\n        <div className=\"loader--dot\" />\n        <div className=\"loader--dot\" />\n        <div className=\"loader--dot\" />\n        <div className=\"loader--text\" />\n      </div>\n    </div>\n  </Container>\n);\nexport default LoadingScreen;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen';\nimport './App.scss';\n\nconst LoadableComponent = Loadable({\n  loader: () => import('./components/Page/Page'),\n  loading: LoadingScreen,\n  delay: 300,\n});\n\ninterface IApp {}\n\nconst App: React.FC<IApp> = () => (\n  <BrowserRouter basename=\"/React\">\n    <Switch>\n      <Route path=\"/\" exact component={LoadableComponent} />\n    </Switch>\n  </BrowserRouter>\n);\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}