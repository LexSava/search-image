{"version":3,"sources":["api/flickr.tsx","assets/avatar/avatar.jpg","components/Header/Header.tsx","store/Store.tsx","components/Seacrh/Seacrh.tsx","components/Menu/Menu.tsx","components/Main/Found/Found.tsx","components/Main/Bookmarks/Bookmarks.tsx","components/Main/Main.tsx","components/Footer/Footer.tsx","components/Page/Page.tsx"],"names":["Api","getImages","textValue","page","axios","get","then","response","data","photos","catch","error","process","stdout","write","Header","props","useState","indicatorValue","setIndicatorValue","stateAvatar","setStateAvatar","useEffect","onIndicator","StyledBadgeInactive","withStyles","theme","createStyles","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Badge","StyledBadgeActive","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","Ava","className","search","pageWithImages","savedImages","tagsForImages","accessToken","makeAutoObservable","this","autoBind","_this","name","storedJson","localStorage","getItem","set","JSON","parse","autorun","value","toJS","setItem","stringify","autoSave","enteredSearch","arr","_","uniqWith","concat","isEqual","elem","id","remove","item","Seacrh","Store","inputText","setInputText","startSearch","setStartSearch","onSearch","Container","Form","inline","OverlayTrigger","placement","overlay","prop","Tooltip","trigger","FormControl","type","placeholder","autoFocus","onInput","event","target","onKeyPress","key","getSearchQuery","preventDefault","Menu","section","setSection","switchSection","toggle","onSwitchPage","Nav","defaultActiveKey","Link","eventKey","onClick","Found","setSearch","setPage","allPages","setAllPages","allImagesPage","setAllImagesPage","cards","setCards","savedImg","setSavedImg","resultsSearch","length","pages","photo","map","getpageWithImages","enteredTag","keyPressHandler","img","srcPath","farm","server","secret","stateButton","imgage","disable","some","i","disableButtons","Card","style","Img","Body","Button","disabled","tag","getSavedImages","getTagsForImages","defaultValue","onChange","back","String","backPage","forward","forwardPage","Bookmarks","savedCards","setSaved–°ards","savedTagsForImages","setSavedTagsForImages","deletCard","setDeletCard","getTag","find","tagImg","undefined","Title","removedSavedImages","removedTagsForImages","Main","Footer","href","rel","Page","menuSelector","setMenuSelector","isIdle","setIsIdle","useIdleTimer","timeout","onActive","onIdle","switchPage","text"],"mappings":"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","file":"static/js/4.17542d9f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiKey = 'e538ac8584601a9e9bcd4c35b2315eaa';\r\n\r\nexport const Api = {\r\n  getImages(textValue: string, page: string) {\r\n    return axios\r\n      .get(\r\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${textValue}&per_page=10&page=${page}&format=json&nojsoncallback=1`\r\n      )\r\n      .then((response) => response.data.photos)\r\n      .catch((error) => {\r\n        process.stdout.write('Error fetching posts: ', error);\r\n      });\r\n  },\r\n};\r\n\r\nexport default Api;\r\n","export default __webpack_public_path__ + \"static/media/avatar.67396a8f.jpg\";","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { Theme, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Ava from '../../assets/avatar/avatar.jpg';\r\n\r\ninterface IHeader {\r\n  onIndicator: boolean;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = (props) => {\r\n  const [indicatorValue, setIndicatorValue] = useState<boolean>(false);\r\n  // eslint-disable-next-line\r\n  const [stateAvatar, setStateAvatar] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    setIndicatorValue(props.onIndicator);\r\n  }, [props.onIndicator]);\r\n\r\n  const StyledBadgeInactive = withStyles((theme: Theme) =>\r\n    createStyles({\r\n      badge: {\r\n        backgroundColor: '#ff0000',\r\n        color: '#ff0000',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          borderRadius: '50%',\r\n          animation: '$ripple 1.2s infinite ease-in-out',\r\n          border: '1px solid currentColor',\r\n          content: '\"\"',\r\n        },\r\n      },\r\n      '@keyframes ripple': {\r\n        '0%': {\r\n          transform: 'scale(.8)',\r\n          opacity: 1,\r\n        },\r\n        '100%': {\r\n          transform: 'scale(2.4)',\r\n          opacity: 0,\r\n        },\r\n      },\r\n    })\r\n  )(Badge);\r\n\r\n  const StyledBadgeActive = withStyles((theme: Theme) =>\r\n    createStyles({\r\n      badge: {\r\n        backgroundColor: ' #44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          borderRadius: '50%',\r\n          animation: '$ripple 1.2s infinite ease-in-out',\r\n          border: '1px solid currentColor',\r\n          content: '\"\"',\r\n        },\r\n      },\r\n      '@keyframes ripple': {\r\n        '0%': {\r\n          transform: 'scale(.8)',\r\n          opacity: 1,\r\n        },\r\n        '100%': {\r\n          transform: 'scale(2.4)',\r\n          opacity: 0,\r\n        },\r\n      },\r\n    })\r\n  )(Badge);\r\n\r\n  useEffect(() => {\r\n    setStateAvatar(\r\n      indicatorValue ? (\r\n        <StyledBadgeInactive\r\n          overlap=\"circular\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          <Avatar alt=\"Avatar\" src={Ava} />\r\n        </StyledBadgeInactive>\r\n      ) : (\r\n        <StyledBadgeActive\r\n          overlap=\"circular\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          <Avatar alt=\"Avatar\" src={Ava} />\r\n        </StyledBadgeActive>\r\n      )\r\n    );\r\n  }, [indicatorValue]);\r\n\r\n  return (\r\n    <header className=\"w-100 p-3 background-header text-dark d-flex justify-content-between\">\r\n      <div className=\"ms-4 h4 d-flex align-items-md-center color-header\">\r\n        Image Finder\r\n      </div>\r\n      {stateAvatar}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeAutoObservable, autorun, set, toJS } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { IBodyImg, ITagsForImages } from '../common/interfaces';\r\n\r\n// eslint-disable-next-line\r\nexport function autoSave(_this: any, name: string) {\r\n  const storedJson = localStorage.getItem(name);\r\n  if (storedJson) {\r\n    set(_this, JSON.parse(storedJson));\r\n  }\r\n  autorun(() => {\r\n    const value = toJS(_this);\r\n    localStorage.setItem(name, JSON.stringify(value));\r\n  });\r\n}\r\n// window.localStorage.clear();\r\nclass Store {\r\n  search: string = '';\r\n\r\n  page: string = '1';\r\n\r\n  pageWithImages: Array<IBodyImg> = [];\r\n\r\n  savedImages: Array<IBodyImg> = [];\r\n\r\n  tagsForImages: Array<ITagsForImages> = [];\r\n\r\n  public accessToken: string;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, {}, { autoBind: true });\r\n    this.accessToken = '';\r\n    autoSave(this, 'authStore');\r\n  }\r\n\r\n  getSearchQuery(enteredSearch: string) {\r\n    this.search = enteredSearch;\r\n  }\r\n\r\n  getpageWithImages(arr: Array<IBodyImg>) {\r\n    this.pageWithImages = arr;\r\n  }\r\n\r\n  getSavedImages(arr: IBodyImg) {\r\n    this.savedImages = _.uniqWith(this.savedImages.concat(arr), _.isEqual);\r\n    // console.log(this.savedImages);\r\n  }\r\n\r\n  getTagsForImages(elem: ITagsForImages) {\r\n    this.tagsForImages = _.uniqWith(this.tagsForImages.concat(elem), _.isEqual);\r\n    // console.log(this.tagsForImages);\r\n  }\r\n\r\n  removedSavedImages(id: string) {\r\n    this.savedImages = _.remove(this.savedImages, (item) => item.id !== id);\r\n    // console.log(this.savedImages);\r\n  }\r\n\r\n  removedTagsForImages(id: string) {\r\n    this.tagsForImages = _.remove(this.tagsForImages, (item) => item.id !== id);\r\n    // console.log(this.savedImages);\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Seacrh.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from 'react-bootstrap';\r\n\r\nimport Store from '../../store/Store';\r\n\r\ninterface ISearch {\r\n  onSearch(text: string): void;\r\n}\r\n\r\nconst Seacrh: React.FC<ISearch> = (props) => {\r\n  const [inputText, setInputText] = useState<string>(Store.search);\r\n  const [startSearch, setStartSearch] = useState<string>('');\r\n\r\n  const changeHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const keyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      Store.getSearchQuery(inputText);\r\n      setStartSearch(inputText);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.onSearch(startSearch);\r\n  });\r\n\r\n  // eslint-disable-next-line\r\n  const renderTooltip = (prop: any) => (\r\n    <Tooltip {...prop} className=\"mt-2\">\r\n      Click Enter to search!\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Container className=\"search-block w-100 p-3 text-dark d-flex justify-content-between \">\r\n      <Form inline className=\"d-flex w-100 justify-content-end \">\r\n        <OverlayTrigger\r\n          placement=\"bottom-start\"\r\n          overlay={renderTooltip}\r\n          trigger=\"focus\"\r\n        >\r\n          <FormControl\r\n            type=\"search\"\r\n            placeholder=\"Find images\"\r\n            className=\"\"\r\n            autoFocus\r\n            value={inputText}\r\n            // onChange={changeHandle}\r\n            onInput={changeHandle}\r\n            onKeyPress={keyPressHandler}\r\n          />\r\n        </OverlayTrigger>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Seacrh;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Menu.scss';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { BsCloud, BsFolder } from 'react-icons/bs';\r\n\r\ninterface IMenu {\r\n  onSwitchPage(text: string): void;\r\n}\r\n\r\nconst Menu: React.FC<IMenu> = (props) => {\r\n  const [section, setSection] = useState<string>('found');\r\n\r\n  const switchSection = (toggle: string) => {\r\n    setSection(toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.onSwitchPage(section);\r\n  });\r\n\r\n  return (\r\n    <Nav\r\n      defaultActiveKey=\"/home\"\r\n      className=\"flex-column block-example menu-block p-2\"\r\n    >\r\n      <Nav.Link eventKey=\"link-1\" className=\"mt-3 link-dark\">\r\n        <BsCloud\r\n          className=\"linck-icon\"\r\n          onClick={() => switchSection('found')}\r\n        />\r\n      </Nav.Link>\r\n      <Nav.Link eventKey=\"link-2\" className=\"mt-3 link-dark\">\r\n        <BsFolder\r\n          className=\"linck-icon\"\r\n          onClick={() => switchSection('bookmark')}\r\n        />\r\n      </Nav.Link>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Found.scss';\r\nimport { Container, Button, Card, Form, FormControl } from 'react-bootstrap';\r\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs';\r\nimport Store from '../../../store/Store';\r\nimport { Api } from '../../../api/flickr';\r\nimport { IBodyImg, IImgSrc } from '../../../common/interfaces';\r\n\r\ninterface IFound {\r\n  resultsSearch: string;\r\n  section: string;\r\n}\r\n\r\nconst Found: React.FC<IFound> = (props) => {\r\n  const [search, setSearch] = useState<string>('');\r\n  const [page, setPage] = useState<string>('1');\r\n  const [allPages, setAllPages] = useState<string>('1');\r\n  const [inputText, setInputText] = useState<string>('');\r\n  const [allImagesPage, setAllImagesPage] = useState<Array<IBodyImg>>([]);\r\n  // eslint-disable-next-line\r\n  const [cards, setCards] = useState<any>([]);\r\n\r\n  const [savedImg, setSavedImg] = useState<Array<IBodyImg>>([]);\r\n\r\n  useEffect(() => {\r\n    setSearch(props.resultsSearch);\r\n  }, [props.resultsSearch]);\r\n\r\n  useEffect(() => {\r\n    setSavedImg(Store.savedImages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (search.length !== 0) {\r\n      const getOnePageImages = Api.getImages(search, page);\r\n      getOnePageImages.then((response) => {\r\n        setAllPages(response.pages);\r\n\r\n        setAllImagesPage(response.photo.map((item: IBodyImg) => item));\r\n        Store.getpageWithImages(response.photo.map((item: IBodyImg) => item));\r\n      });\r\n    }\r\n  }, [search, page]);\r\n\r\n  const enteredTag = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const getSaved–°ards = (elem: IImgSrc) => {\r\n    Store.getSavedImages(elem);\r\n    setSavedImg(Store.savedImages);\r\n  };\r\n\r\n  const addTagImage = (id: string, tag: string) => {\r\n    Store.getTagsForImages({ id, tag });\r\n  };\r\n\r\n  const keyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage('1');\r\n  }, [search]);\r\n\r\n  const backPage = () => {\r\n    let back = +page;\r\n    if (back > 1) {\r\n      back -= 1;\r\n      setPage(String(back));\r\n    }\r\n  };\r\n\r\n  const forwardPage = () => {\r\n    let forward = +page;\r\n    if (forward < +allPages) {\r\n      forward += 1;\r\n      setPage(String(forward));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCards(\r\n      Store.pageWithImages.map((img: IBodyImg) => {\r\n        const srcPath = `https://farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`;\r\n        let stateButton: boolean = false;\r\n        const disableButtons = (imgage: IBodyImg) => {\r\n          const disable = savedImg.some((i: IBodyImg) => i.id === imgage.id);\r\n          stateButton = disable;\r\n        };\r\n        disableButtons(img);\r\n        return (\r\n          <Card style={{ width: '18rem' }} key={img.id} className=\"mb-4\">\r\n            <Card.Img variant=\"top\" src={srcPath} className=\"card-img img\" />\r\n            <Card.Body>\r\n              {stateButton ? (\r\n                <Form inline className=\"w-100 \">\r\n                  <Button variant=\"warning\" disabled>\r\n                    Image saved\r\n                  </Button>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Some tags?\"\r\n                    className=\"mt-3\"\r\n                    disabled\r\n                  />\r\n                </Form>\r\n              ) : (\r\n                <Form inline className=\"w-100 \">\r\n                  <Button\r\n                    variant=\"dark\"\r\n                    onClick={() => {\r\n                      getSaved–°ards(img);\r\n                      addTagImage(img.id, inputText);\r\n                    }}\r\n                  >\r\n                    Bookmark it!\r\n                  </Button>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    defaultValue=\"\"\r\n                    placeholder=\"Some tags?\"\r\n                    className=\"mt-3\"\r\n                    onChange={enteredTag}\r\n                    onKeyPress={keyPressHandler}\r\n                  />\r\n                </Form>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })\r\n    );\r\n  }, [allImagesPage, savedImg, inputText]);\r\n\r\n  if (search.length !== 0 && allImagesPage.length !== 0) {\r\n    return (\r\n      <Container className=\"p-0 ps-3\">\r\n        <Container className=\"p-0 d-flex justify-content-end pe-3\">\r\n          <Button\r\n            variant=\"outline-dark\"\r\n            className=\"btn-back\"\r\n            onClick={() => backPage()}\r\n          >\r\n            <BsChevronLeft className=\"btn-back-icon\" />\r\n            Back\r\n          </Button>\r\n          <Button variant=\"dark\" disabled className=\"btn-pages\">\r\n            Page {page} of {allPages}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-dark\"\r\n            className=\"btn-forward\"\r\n            onClick={() => forwardPage()}\r\n          >\r\n            Forward\r\n            <BsChevronRight className=\"btn-forward-icon\" />\r\n          </Button>\r\n        </Container>\r\n\r\n        <Container className=\"p-0 mt-5 d-flex flex-wrap justify-content-around\">\r\n          {cards}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n  if (search.length === 0) {\r\n    return (\r\n      <Container className=\"p-0 ps-3 h5 mt-4\">\r\n        No images here. Try to find anything else?\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container className=\"p-0 ps-3 h5 mt-4\">\r\n      No images here. Whould you try to search for anything else?\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Found;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Bookmarks.scss';\r\nimport { Container, Button, Card, Form } from 'react-bootstrap';\r\nimport Store from '../../../store/Store';\r\nimport { IBodyImg, ITagsForImages } from '../../../common/interfaces';\r\n\r\ninterface IFound {\r\n  resultsSearch: string;\r\n  section: string;\r\n}\r\n\r\nconst Bookmarks: React.FC<IFound> = (props) => {\r\n  // eslint-disable-next-line\r\n  const [cards, setCards] = useState<any>([]);\r\n\r\n  const [savedCards, setSaved–°ards] = useState<Array<IBodyImg>>([]);\r\n  const [savedTagsForImages, setSavedTagsForImages] = useState<\r\n    Array<ITagsForImages>\r\n  >([]);\r\n  const [deletCard, setDeletCard] = useState<string>('');\r\n\r\n  const removeSaved–°ards = (id: string) => {\r\n    setDeletCard(id);\r\n    Store.removedSavedImages(id);\r\n    Store.removedTagsForImages(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSaved–°ards(Store.savedImages);\r\n    setSavedTagsForImages(Store.tagsForImages);\r\n  }, [deletCard]);\r\n\r\n  useEffect(() => {\r\n    setCards(\r\n      savedCards.map((img: IBodyImg) => {\r\n        const getTag = savedTagsForImages.find((item) => item.id === img.id);\r\n        let tagImg = '___';\r\n        if (getTag !== undefined) tagImg = getTag.tag;\r\n        const srcPath = `https://farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`;\r\n        return (\r\n          <Card style={{ width: '18rem' }} key={img.id} className=\"mb-4\">\r\n            <Card.Img variant=\"top\" src={srcPath} className=\"card-img img\" />\r\n            <Card.Body>\r\n              <Card.Title>Card tag: {tagImg} </Card.Title>\r\n              <Form inline className=\"w-100 \">\r\n                <Button variant=\"dark\" onClick={() => removeSaved–°ards(img.id)}>\r\n                  Remove it!\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })\r\n    );\r\n  }, [savedCards]);\r\n\r\n  if (savedCards.length !== 0) {\r\n    return (\r\n      <Container className=\"p-0 ps-3\">\r\n        <Container className=\"p-0 mt-5 d-flex flex-wrap justify-content-around\">\r\n          {cards}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container className=\"p-0 ps-3 h5 mt-4\">\r\n      There are no images. There are no saved images.\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Bookmarks;\r\n","import React from 'react';\r\nimport './Main.scss';\r\n\r\nimport Found from './Found/Found';\r\nimport Bookmarks from './Bookmarks/Bookmarks';\r\n\r\ninterface IMain {\r\n  resultsSearch: string;\r\n  section: string;\r\n}\r\n\r\nconst Main: React.FC<IMain> = (props) => {\r\n  if (props.section === 'found') {\r\n    return (\r\n      <Found resultsSearch={props.resultsSearch} section={props.section} />\r\n    );\r\n  }\r\n  return (\r\n    <Bookmarks resultsSearch={props.resultsSearch} section={props.section} />\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Footer.scss';\r\nimport React from 'react';\r\n\r\ninterface IFooter {}\r\n\r\nconst Footer: React.FC<IFooter> = (props) => (\r\n  <footer className=\"w-100 p-3 background-header text-dark d-flex justify-content-between\">\r\n    <div className=\"ms-4 h6 d-flex align-items-md-center color-header\">\r\n      <a\r\n        href=\"https://github.com/LexSava\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"text-dark\"\r\n      >\r\n        App developer\r\n      </a>\r\n    </div>\r\n  </footer>\r\n);\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { useIdleTimer } from 'react-idle-timer';\r\nimport './Page.scss';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from '../Header/Header';\r\nimport Seacrh from '../Seacrh/Seacrh';\r\nimport Menu from '../Menu/Menu';\r\nimport Main from '../Main/Main';\r\nimport Footer from '../Footer/Footer';\r\n\r\ninterface IPage {}\r\n\r\nconst Page: React.FC<IPage> = (props) => {\r\n  const [search, setSearch] = useState<string>('');\r\n  const [menuSelector, setMenuSelector] = useState<string>('found');\r\n\r\n  const timeout = 1000 * 60;\r\n  const [isIdle, setIsIdle] = useState(false);\r\n  const handleOnActive = () => setIsIdle(false);\r\n  const handleOnIdle = () => setIsIdle(true);\r\n  useIdleTimer({\r\n    timeout,\r\n    onActive: handleOnActive,\r\n    onIdle: handleOnIdle,\r\n  });\r\n\r\n  const processSearch = (text: string) => {\r\n    setSearch(text);\r\n  };\r\n\r\n  const switchPage = (page: string) => {\r\n    setMenuSelector(page);\r\n  };\r\n  if (menuSelector === 'found') {\r\n    return (\r\n      <Container className=\"page bg-light p-0\">\r\n        <Header onIndicator={isIdle} />\r\n        <Container className=\"main-content p-0 d-flex\">\r\n          <Menu onSwitchPage={switchPage} />\r\n          <Container className=\"p-0\">\r\n            <Seacrh onSearch={processSearch} />\r\n            <Main resultsSearch={search} section={menuSelector} />\r\n          </Container>\r\n        </Container>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container className=\"page bg-light p-0\">\r\n      <Header onIndicator={isIdle} />\r\n      <Container className=\"main-content p-0 d-flex\">\r\n        <Menu onSwitchPage={switchPage} />\r\n        <Container className=\"p-0\">\r\n          <Main resultsSearch={search} section={menuSelector} />\r\n        </Container>\r\n      </Container>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}