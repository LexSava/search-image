{"version":3,"sources":["components/LoadingScreen/LoadingScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingScreen","props","Container","className","LoadableComponent","Loadable","loader","loading","delay","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAsBeA,EAfiC,SAACC,GAAD,OAC9C,cAACC,EAAA,EAAD,UACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,yBCVjBC,G,MAAoBC,IAAS,CACjCC,OAAQ,kBAAM,qDACdC,QAASP,EACTQ,MAAO,OAUMC,EALa,kBAC1B,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,OCHtBS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38acdcb4.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './LoadingScreen.scss';\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\ninterface ILoadingScreen {}\r\n\r\nconst LoadingScreen: React.FC<ILoadingScreen> = (props) => (\r\n  <Container>\r\n    <div className=\"container\">\r\n      <div className=\"loader\">\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--dot\" />\r\n        <div className=\"loader--text\" />\r\n      </div>\r\n    </div>\r\n  </Container>\r\n);\r\nexport default LoadingScreen;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen';\r\nimport './App.scss';\r\n\r\nconst LoadableComponent = Loadable({\r\n  loader: () => import('./components/Page/Page'),\r\n  loading: LoadingScreen,\r\n  delay: 300,\r\n});\r\n\r\ninterface IApp {}\r\n\r\nconst App: React.FC<IApp> = () => (\r\n  <HashRouter>\r\n    <Route path=\"/\" exact component={LoadableComponent} />\r\n  </HashRouter>\r\n);\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}